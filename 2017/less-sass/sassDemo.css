@charset "UTF-8";
/*这里要加个编码格式，UTF-8，否则，整个sass不能加中文注释相关。*/
body {
  font-size: 2rem;
  width: 50%;
  margin: 2rem auto; }

div {
  border: 1px solid gray;
  width: 300px; }

/*这就是声明变量*/
/*
可以使用多个变量，用nth(变量，索引)；
这里的索引是从1开始的，对于习惯了下标是0的小伙伴们要注意一下！
但是这么设置，对习惯数字是从0开始的朋友来说，就方便了好多。
*/
.choose {
  /*这里是嵌套，可以直接用父级的下一级标签或者class、ID。
    嵌套是我认为sass最好用的功能，在你写样式的时候，结构会十分清晰，而且因为
    上下层级的关系，只要命名好父级的名字，然后子级的可以用标签来获取并修改他们。
  */
  /*==========1.=================*/ }
  .choose p {
    color: green; }
  .choose span {
    color: red; }
  .choose .thisSpan {
    color: #fff;
    /*可以使用多个变量，格式：nth(变量，索引)；
      可以看到这里不同的索引，对应着不同的颜色。
    */ }

/*==================2.===================*/
.math {
  color: gold; }

/*sass都是全局变量*/
.text {
  color: green; }

/*==============3.=====================*/
.all1 {
  color: blue;
  /*这是局部变量，只会在其内部作用，不会影响到外界*/ }

.all2 {
  color: red; }

/*这个是第二个声明的变量*/
/*就是现在这里变成第一个声明的变量*/
.all1 {
  /*这里输出是红色的，因为第二个变量覆盖了第一个变量*/
  color: red;
  /*有个小细节，改变了默认值之后，这旁边没有颜色的样式，不过编译的css里面有*/ }

/*这样写是没有错误，但是没有意义了，default本来就是改变声明的先后顺序*/
.text {
  color: gold; }

/*
$textDefault3:black!default;
$textDefault3:red;
$textDefault3:green!default;
这样也是输出红色
*/
.text {
  /*这里输出红色*/
  color: red; }

/*因为sass是从上往下编译的，这里默认值设为黑色*/
/*上面的默认值，被这个默认值覆盖了，这里变成了第一个变量*/
.text {
  /*green是第一个变量，然后black是第二个变量，所以这里输出黑色*/
  color: black; }

.text {
  /*这里是局部作用域*/
  color: red; }

.text {
  /*这里报错，因为没有找到局部作用域的默认值。*/ }

/*这里是计算*/
/*这里是继承class*/
/*mixin定义代码块，混入，可以定义缺省值*/
.text {
  /*这里是继承*/
  /*这里是混入*/ }

/*插入文件*/
/*条件语句*/

/*# sourceMappingURL=sassDemo.css.map */
