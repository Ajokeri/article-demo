@charset "UTF-8";
/*这里要加个编码格式，UTF-8，否则，整个sass不能加中文注释相关。*/

body{
  font-size: 2rem;
  width: 50%;
  margin: 2rem auto;
}

div{
  border: 1px solid gray;
  width: 300px;
}

$color:gray;
/*这就是声明变量*/


$back:#fff,green,red;

/*
可以使用多个变量，用nth(变量，索引)；
这里的索引是从1开始的，对于习惯了下标是0的小伙伴们要注意一下！
但是这么设置，对习惯数字是从0开始的朋友来说，就方便了好多。
*/


.choose{
  p{
    color: nth($back,2);
  }
  span{
    color: red;
  }
  .thisSpan{
    color: nth($back,1);


    /*可以使用多个变量，格式：nth(变量，索引)；
      可以看到这里不同的索引，对应着不同的颜色。
    */
  }

  /*这里是嵌套，可以直接用父级的下一级标签或者class、ID。
    嵌套是我认为sass最好用的功能，在你写样式的时候，结构会十分清晰，而且因为
    上下层级的关系，只要命名好父级的名字，然后子级的可以用标签来获取并修改他们。
  */

/*==========1.=================*/
  #thisId{
    //color: nth($back,3);
    //color:  $text1;
  }

}
/*==================2.===================*/
$text1:green;//这里声明的green已经被下面的gold给覆盖了
$text1:gold;
.math{
  color: $text1;
}
/*sass都是全局变量*/
$text1:green;//这里又重新把上面的gold覆盖了
.text{
  color: $text1;
}
/*==============3.=====================*/
$text:red;//声明了red的变量
.all1{
  $text:blue;//重新声明blue变量
  color: $text;
  /*这是局部变量，只会在其内部作用，不会影响到外界*/
}
.all2{
  color: $text;//这里没有重新声明，还是red的变量，说明局部声明的变量不影响外界声明的变量
}
.text{
  //color: $textDefault;
}

$textDefault1:red; /*这个是第二个声明的变量*/
$textDefault1:blue!default; /*就是现在这里变成第一个声明的变量*/
.all1 {
  /*这里输出是红色的，因为第二个变量覆盖了第一个变量*/
  color: $textDefault1;/*有个小细节，改变了默认值之后，这旁边没有颜色的样式，不过编译的css里面有*/
}
$textDefault2:green!default;
$textDefault2:gold;
/*这样写是没有错误，但是没有意义了，default本来就是改变声明的先后顺序*/
.text{
color: $textDefault2;
}
$textDefault3:red;
$textDefault3:black!default;
$textDefault3:green!default;
/*
$textDefault3:black!default;
$textDefault3:red;
$textDefault3:green!default;
这样也是输出红色
*/
.text{
  /*这里输出红色*/
  color:$textDefault3 ;
}

$textDefault4:black!default;/*因为sass是从上往下编译的，这里默认值设为黑色*/
$textDefault4:green!default; /*上面的默认值，被这个默认值覆盖了，这里变成了第一个变量*/
.text{
  /*green是第一个变量，然后black是第二个变量，所以这里输出黑色*/
  color: $textDefault4;
}
.text{
  /*这里是局部作用域*/
  $textDefault5:red!default;
  color: $textDefault5;
}
.text{
  /*这里报错，因为没有找到局部作用域的默认值。*/
  //color: $textDefault5;
}


/*这里是计算*/
.math{
  //width: 50px + 100px;
  //height: 150px+200px;
}

/*这里是继承class*/
.textText{
  //font-size: 3.5rem;
  //font-weight: bold;
}


/*mixin定义代码块，混入，可以定义缺省值*/
@mixin textMixin($value:3rem){
  //font-size: $value;
  //color: gold;
}

.text{
  /*这里是继承*/
  //@extend .textText;
/*这里是混入*/
  //@include textMixin($value:2rem)
}


/*插入文件*/
//  @import "abc.css";


/*条件语句*/
//　　div {
//  　　　　@if 1 + 1 == 2 { border: 1px solid; }
//  　　　　@if 5 < 3 { border: 2px dotted; }
//  　　}





